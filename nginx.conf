# HTTP Server - Redirect to HTTPS
server {
    listen 80;
    server_name elpan.in www.elpan.in;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS Server
server {
    listen 443 ssl;
    server_name elpan.in www.elpan.in;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/elpan.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/elpan.in/privkey.pem;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS
    add_header Strict-Transport-Security "max-age=31536000" always;

    # Root directory and index
    root /usr/share/nginx/html;
    index index.html;

    # Serve manifest.json with proper headers
    location = /manifest.json {
        add_header Content-Type application/json;
        add_header Access-Control-Allow-Origin "*";
        add_header Cache-Control "public, max-age=3600";
        try_files $uri =404;
        access_log /var/log/nginx/manifest_access.log;
        error_log /var/log/nginx/manifest_error.log debug;
    }

    # Serve static files
    location ~* \.(json|ico|png|jpg|jpeg|gif|svg|js|css|map)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
        try_files $uri =404;
    }

    # API proxy
    location /api/ {
        proxy_pass http://backend:3001/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

        # Handle preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # React router support
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Prevent access to source maps and source files in production
    location ~ \.(map|js|css)$ {
        # Only allow access to compiled files
        location ~ \.(min\.)?(js|css)$ {
            add_header Cache-Control "public, max-age=31536000";
            try_files $uri =404;
        }
        # Block access to source maps and raw source files
        return 404;
    }

    # Security headers with updated CSP
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com;
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
        font-src 'self' https://fonts.gstatic.com;
        img-src 'self' data: https: https://www.google-analytics.com;
        connect-src 'self' https://elpan.in/api http://localhost:3001 https://www.google-analytics.com;
    " always;
} 